# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.graph.find_path as module_0
import builtins as module_1


def test_case_0():
    bool_0 = True
    var_0 = module_0.find_path(bool_0, bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xc5,F}\xb3"
    set_0 = {bytes_0, bytes_0, bytes_0, bytes_0}
    module_0.find_path(set_0, bytes_0, set_0)


def test_case_2():
    float_0 = -1053.4
    var_0 = module_0.find_all_path(float_0, float_0, float_0)


def test_case_3():
    str_0 = "pQ"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.find_all_path(dict_0, str_0, dict_0)


def test_case_4():
    str_0 = "pQ"
    tuple_0 = module_0.find_shortest_path(str_0, str_0, str_0)
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.find_all_path(dict_0, str_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    float_0 = -344.0
    none_type_0 = None
    module_0.find_shortest_path(float_0, float_0, none_type_0)


def test_case_6():
    none_type_0 = None
    var_0 = module_0.find_path(none_type_0, none_type_0, none_type_0)
    tuple_0 = ()
    dict_0 = {tuple_0: var_0}
    var_1 = module_0.find_path(var_0, dict_0, none_type_0)
    var_2 = module_0.find_shortest_path(dict_0, tuple_0, none_type_0)


def test_case_7():
    none_type_0 = None
    var_0 = module_0.find_path(none_type_0, none_type_0, none_type_0)
    tuple_0 = ()
    dict_0 = {tuple_0: var_0}
    var_1 = module_0.find_shortest_path(dict_0, tuple_0, none_type_0)


def test_case_8():
    str_0 = ")Q"
    var_0 = module_0.find_all_path(str_0, str_0, str_0)
    var_1 = module_0.find_all_path(str_0, str_0, str_0)
    var_2 = module_0.find_path(var_0, var_0, var_0, var_0)
    var_3 = module_0.find_path(var_0, var_0, var_2)
    var_4 = module_0.find_path(var_0, var_3, var_0)
    str_1 = "|"
    var_5 = module_0.find_path(str_0, str_1, var_0)
    var_6 = module_0.find_shortest_path(str_0, var_3, var_3)
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, str_0: str_0, tuple_0: tuple_0}
    object_0 = module_1.object()
    var_7 = module_0.find_path(dict_0, str_0, var_6)


def test_case_9():
    none_type_0 = None
    var_0 = module_0.find_path(none_type_0, none_type_0, none_type_0)
    tuple_0 = ()
    var_1 = module_0.find_shortest_path(tuple_0, none_type_0, tuple_0)
    dict_0 = {tuple_0: var_0}
    var_2 = module_0.find_shortest_path(dict_0, tuple_0, none_type_0)


def test_case_10():
    str_0 = ")Q"
    var_0 = module_0.find_all_path(str_0, str_0, str_0)
    var_1 = module_0.find_all_path(str_0, str_0, str_0)
    var_2 = module_0.find_path(var_0, var_0, var_0, var_0)
    var_3 = module_0.find_path(var_0, var_0, var_2)
    tuple_0 = ()
    var_4 = module_0.find_path(tuple_0, var_3, tuple_0)
    str_1 = "|"
    var_5 = module_0.find_path(str_0, str_1, var_0)
    var_6 = module_0.find_shortest_path(str_0, var_3, var_3)
    tuple_1 = ()
    dict_0 = {tuple_1: tuple_1, tuple_1: tuple_1, str_0: str_0, tuple_1: tuple_1}
    object_0 = module_1.object()
    var_7 = module_0.find_shortest_path(dict_0, str_0, var_3)
    var_8 = module_0.find_path(dict_0, str_0, var_6)


@pytest.mark.xfail(strict=True)
def test_case_11():
    int_0 = -1212
    var_0 = module_0.find_path(int_0, int_0, int_0)
    str_0 = "Q"
    var_1 = module_0.find_path(var_0, var_0, var_0)
    var_2 = module_0.find_all_path(str_0, str_0, str_0)
    var_3 = module_0.find_all_path(str_0, str_0, str_0)
    bytes_0 = b""
    var_4 = module_0.find_shortest_path(var_0, var_3, var_3)
    var_5 = module_0.find_path(var_3, var_2, str_0)
    var_6 = module_0.find_all_path(var_2, str_0, var_0)
    none_type_0 = None
    var_7 = module_0.find_shortest_path(str_0, bytes_0, bytes_0)
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0, tuple_0: tuple_0, str_0: str_0, tuple_0: tuple_0}
    var_8 = module_0.find_shortest_path(var_6, int_0, var_1)
    none_type_1 = None
    object_0 = module_1.object()
    var_9 = module_0.find_shortest_path(dict_0, str_0, int_0)
    var_10 = module_0.find_all_path(var_3, var_5, var_7)
    var_11 = module_0.find_all_path(dict_0, str_0, none_type_0)
    var_12 = module_0.find_path(dict_0, str_0, none_type_0)
    var_13 = module_0.find_shortest_path(var_7, var_12, var_5, var_2)
    module_0.find_path(var_5, var_6, none_type_1)


def test_case_12():
    str_0 = ")Q"
    var_0 = module_0.find_all_path(str_0, str_0, str_0)
    var_1 = module_0.find_all_path(str_0, str_0, str_0)
    var_2 = module_0.find_path(var_0, var_0, var_0, var_0)
    bytes_0 = b""
    tuple_0 = ()
    bool_0 = True
    var_3 = module_0.find_path(tuple_0, tuple_0, bool_0)
    var_4 = module_0.find_path(var_1, var_0, str_0)
    none_type_0 = None
    var_5 = module_0.find_shortest_path(str_0, bytes_0, bytes_0)
    tuple_1 = ()
    dict_0 = {tuple_1: tuple_1, tuple_1: tuple_1, str_0: str_0, tuple_1: tuple_1}
    object_0 = module_1.object()
    var_6 = module_0.find_shortest_path(dict_0, str_0, bool_0)
    var_7 = module_0.find_path(var_5, dict_0, none_type_0)
    var_8 = module_0.find_all_path(dict_0, str_0, none_type_0)
    var_9 = module_0.find_path(dict_0, tuple_0, var_0)
    object_1 = module_1.object()


def test_case_13():
    none_type_0 = None
    var_0 = module_0.find_path(none_type_0, none_type_0, none_type_0)
    tuple_0 = ()
    var_1 = module_0.find_shortest_path(tuple_0, none_type_0, tuple_0)
    dict_0 = {tuple_0: var_0}
    var_2 = module_0.find_shortest_path(dict_0, tuple_0, none_type_0)
    var_3 = module_0.find_all_path(dict_0, tuple_0, var_1)
