# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.bfs.word_ladder as module_0


def test_case_0():
    str_0 = "-?(\\d|[1-8]\\d|90)\\.?\\d*, -?(\\d|[1-9]\\d|1[0-7]\\d|180)\\.?\\d*$"
    set_0 = {str_0, str_0, str_0}
    var_0 = module_0.word_range(set_0)
    var_1 = module_0.word_range(str_0)
    var_2 = module_0.ladder_length(set_0, str_0, var_1)
    assert var_2 == -1
    dict_0 = {var_2: var_2, str_0: str_0}
    var_3 = module_0.word_range(dict_0)


def test_case_1():
    str_0 = "t}"
    str_1 = "\rh"
    var_0 = module_0.ladder_length(str_1, str_0, str_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.ladder_length(none_type_0, none_type_0, none_type_0)


def test_case_3():
    str_0 = "tB"
    var_0 = module_0.ladder_length(str_0, str_0, str_0)
    assert var_0 == 0
    str_1 = "Ph"
    var_1 = module_0.ladder_length(str_1, str_0, str_0)
    assert var_1 == -1


def test_case_4():
    float_0 = -3021.996889980156
    dict_0 = {float_0: float_0, float_0: float_0}
    var_0 = module_0.ladder_length(dict_0, dict_0, float_0)
    assert var_0 == 0
    set_0 = {var_0}
    var_1 = module_0.ladder_length(set_0, dict_0, float_0)
    assert var_1 == 1


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "t}"
    str_1 = "w{"
    str_2 = "0b}"
    module_0.ladder_length(str_0, str_1, str_2)
