# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.dp.combination_sum as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.combination_sum_topdown(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    module_0.combination_sum_bottom_up(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x8f\xbd\x98I"
    module_0.combination_sum_bottom_up(bytes_0, bytes_0)


def test_case_3():
    bool_0 = False
    var_0 = module_0.combination_sum_topdown(bool_0, bool_0)
    assert var_0 == 1
    assert module_0.DP == [1]


def test_case_4():
    bytes_0 = b"\x82\xb46\xd4\xe1\xc47\x9d\xb3\xb1\xde\xa8\xce4\xf4"
    int_0 = 316
    var_0 = module_0.combination_sum_topdown(bytes_0, int_0)
    assert var_0 == 33
    assert module_0.DP == [
        1,
        0,
        0,
        0,
        0,
        -1,
        0,
        0,
        -1,
        0,
        0,
        0,
        0,
        0,
        0,
        -1,
        0,
        0,
        0,
        -1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        -1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        1,
        1,
        0,
        -1,
        0,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        0,
        0,
        -1,
        0,
        -1,
        -1,
        -1,
        0,
        -1,
        -1,
        -1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        -1,
        0,
        -1,
        -1,
        -1,
        0,
        -1,
        0,
        0,
        -1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        2,
        2,
        1,
        -1,
        1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        0,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        0,
        0,
        -1,
        0,
        -1,
        0,
        0,
        -1,
        0,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        0,
        -1,
        -1,
        0,
        0,
        0,
        0,
        0,
        1,
        1,
        3,
        3,
        3,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        0,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        1,
        0,
        1,
        2,
        4,
        -1,
        9,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        5,
        5,
        -1,
        18,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        33,
    ]


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.combination_sum_topdown(list_0, bool_0)
    assert var_0 == 4
    assert module_0.DP == [1, 4]
    var_1 = module_0.helper_topdown(bool_0, bool_0)
    assert var_1 == 4
    var_2 = module_0.helper_topdown(var_1, bool_0)
    assert var_2 == 4
    var_3 = module_0.combination_sum_bottom_up(list_0, var_0)
    assert var_3 == 256
    module_0.combination_sum_topdown(var_1, list_0)
