# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.dp.hosoya_triangle as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    bool_0 = False
    module_0.hosoya(none_type_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 3318
    module_0.hosoya(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    var_0 = module_0.print_hosoya(bool_0)
    module_0.print_hosoya(var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = -3106
    var_0 = module_0.hosoya_testing(int_0)
    var_1 = module_0.print_hosoya(int_0)
    module_0.hosoya(int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = -731
    var_0 = module_0.hosoya_testing(int_0)
    int_1 = 16
    set_0 = {int_1, int_1, int_1, int_1}
    var_1 = module_0.hosoya_testing(int_1)
    module_0.print_hosoya(set_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    var_0 = module_0.hosoya_testing(bool_0)
    set_0 = set()
    module_0.hosoya_testing(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b"p\xa6x\r#\xdf\xdb(\x06\xef\x93\xa2\xa0\x0fsZ"
    tuple_0 = (bytes_0,)
    module_0.print_hosoya(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = True
    var_0 = module_0.hosoya(bool_0, bool_0)
    assert var_0 == 1
    float_0 = -1507.0
    module_0.hosoya(var_0, float_0)
