# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.arrays.delete_nth as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = "\n    :type s: str\n    :rtype: str\n    "
    module_0.delete_nth_naive(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    var_0 = module_0.delete_nth(list_0, list_0)
    none_type_0 = None
    var_1 = module_0.delete_nth_naive(list_0, none_type_0)
    var_2 = var_1.__contains__(none_type_0)
    var_3 = var_0.append(var_2)
    var_0.startswith(var_1)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xc6f9W("
    module_0.delete_nth(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.delete_nth_naive(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    str_0 = "}\nNXw"
    var_0 = module_0.delete_nth_naive(str_0, bool_0)
    module_0.delete_nth(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    str_0 = "}\nNXw"
    var_0 = module_0.delete_nth_naive(str_0, bool_0)
    var_0.find(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    dict_0 = {}
    var_0 = module_0.delete_nth_naive(dict_0, dict_0)
    list_0 = []
    str_0 = "TgT%'x9h=0wR3D`"
    var_1 = var_0.__eq__(var_0)
    var_2 = module_0.delete_nth(var_0, list_0)
    var_3 = module_0.delete_nth(str_0, var_1)
    var_4 = module_0.delete_nth_naive(var_2, dict_0)
    var_5 = var_3.copy()
    var_4.ljust(var_1)
