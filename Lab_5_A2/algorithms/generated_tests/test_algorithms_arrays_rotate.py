# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.arrays.rotate as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = ">)I]`\tOYc;K"
    bool_0 = True
    bool_1 = False
    var_0 = module_0.rotate_v1(str_0, bool_1)
    module_0.rotate_v2(str_0, bool_0)


def test_case_1():
    none_type_0 = None
    bytes_0 = b"P\x1cH\xe5$\xafd2\xa3U\x08|\xd3\xc7\x8c|}\xde\xf0"
    dict_0 = {none_type_0: bytes_0, none_type_0: none_type_0}
    bool_0 = False
    tuple_0 = (dict_0, bool_0)
    var_0 = module_0.rotate_v3(none_type_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    complex_0 = 2j
    module_0.rotate_v3(complex_0, complex_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.rotate_v2(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 496
    list_0 = [int_0, int_0]
    var_0 = module_0.rotate_v1(list_0, int_0)
    str_0 = ">)I]`\tOYc;K"
    bool_0 = False
    bool_1 = False
    var_1 = module_0.rotate_v1(str_0, bool_1)
    module_0.rotate_v2(str_0, bool_0)


def test_case_5():
    int_0 = 496
    list_0 = [int_0, int_0]
    var_0 = module_0.rotate_v1(list_0, int_0)
    var_1 = module_0.rotate_v2(var_0, int_0)
    bool_0 = True
    var_2 = module_0.rotate_v2(var_1, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = 496
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.rotate_v1(list_0, int_0)
    str_0 = ">)I]`\tOYc;K"
    var_1 = module_0.rotate_v2(var_0, int_0)
    str_1 = ">)I]`\tOYc;K"
    module_0.rotate_v2(str_1, str_0)
