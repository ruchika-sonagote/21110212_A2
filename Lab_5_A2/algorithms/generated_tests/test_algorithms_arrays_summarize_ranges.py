# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.arrays.summarize_ranges as module_0


def test_case_0():
    bool_0 = True
    list_0 = [bool_0]
    list_1 = module_0.summarize_ranges(list_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    module_0.summarize_ranges(list_0)


def test_case_2():
    bool_0 = True
    int_0 = 1
    list_0 = [bool_0, int_0, int_0]
    list_1 = module_0.summarize_ranges(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    module_0.summarize_ranges(bool_0)


def test_case_4():
    bool_0 = True
    bool_1 = False
    bool_2 = False
    int_0 = 1278
    bool_3 = False
    list_0 = [bool_2, int_0, bool_3]
    list_1 = module_0.summarize_ranges(list_0)
    int_1 = 1966
    list_2 = module_0.summarize_ranges(list_0)
    bool_4 = False
    list_3 = [int_1, bool_4, bool_0]
    bytes_0 = b"\x029\xe97rh3\x9d\xd4\xd6"
    list_4 = module_0.summarize_ranges(bytes_0)
    list_5 = module_0.summarize_ranges(list_3)
    list_6 = [bool_0, bool_0, bool_1]
    list_7 = module_0.summarize_ranges(list_6)


def test_case_5():
    bool_0 = True
    int_0 = 8
    bool_1 = False
    list_0 = [bool_1, bool_0, bool_1]
    list_1 = module_0.summarize_ranges(list_0)
    int_1 = 64
    list_2 = [int_0, int_1, bool_0]
    list_3 = module_0.summarize_ranges(list_2)
    int_2 = -4330
    list_4 = [bool_0, bool_0, int_2]
    list_5 = module_0.summarize_ranges(list_4)
