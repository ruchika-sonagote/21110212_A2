# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.dfs.walls_and_gates as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"]`\x91V\xc1\xe46\xad\xe4"
    module_0.walls_and_gates(bytes_0)


def test_case_1():
    str_0 = "F05O$jjazO7E"
    var_0 = module_0.walls_and_gates(str_0)
    var_1 = module_0.walls_and_gates(str_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -2159
    var_0 = module_0.dfs(int_0, int_0, int_0, int_0)
    none_type_0 = None
    var_1 = module_0.dfs(var_0, int_0, none_type_0, int_0)
    module_0.walls_and_gates(var_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = 3.0
    none_type_0 = None
    module_0.dfs(float_0, float_0, float_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    module_0.dfs(none_type_0, none_type_0, none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    tuple_0 = ()
    var_0 = module_0.walls_and_gates(tuple_0)
    tuple_1 = ()
    bool_0 = False
    var_1 = module_0.dfs(tuple_1, bool_0, bool_0, bool_0)
    str_0 = "F05O$jjazO7E"
    var_2 = module_0.walls_and_gates(str_0)
    module_0.walls_and_gates(var_1)


@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = -2159
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0, int_0: int_0}
    float_0 = 0.1
    none_type_0 = None
    module_0.dfs(dict_0, float_0, none_type_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    float_0 = 1416.93224
    float_1 = 0.1
    none_type_0 = None
    list_0 = [float_1, float_1, float_0, float_1]
    float_2 = 3154.526
    module_0.dfs(list_0, float_1, float_2, none_type_0)


def test_case_8():
    int_0 = -2158
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    float_0 = 0.1
    var_0 = module_0.dfs(dict_0, float_0, int_0, int_0)


def test_case_9():
    str_0 = "?Z$"
    var_0 = module_0.walls_and_gates(str_0)
    bool_0 = False
    var_1 = module_0.dfs(str_0, bool_0, bool_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_10():
    int_0 = -2159
    float_0 = 12.501467099186643
    str_0 = "?Z$"
    bool_0 = True
    var_0 = module_0.dfs(str_0, bool_0, bool_0, str_0)
    var_1 = module_0.dfs(str_0, float_0, int_0, int_0)
    none_type_0 = None
    int_1 = 2826
    module_0.dfs(var_1, int_1, none_type_0, var_1)


@pytest.mark.xfail(strict=True)
def test_case_11():
    str_0 = "I"
    var_0 = module_0.walls_and_gates(str_0)
    bool_0 = False
    module_0.dfs(str_0, bool_0, bool_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_12():
    bool_0 = False
    int_0 = 12
    tuple_0 = (bool_0, int_0)
    list_0 = [bool_0, int_0, tuple_0]
    tuple_1 = (tuple_0, int_0, bool_0, list_0)
    module_0.walls_and_gates(tuple_1)
