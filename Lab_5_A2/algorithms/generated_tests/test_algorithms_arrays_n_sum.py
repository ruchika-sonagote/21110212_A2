# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.arrays.n_sum as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    tuple_0 = ()
    module_0.n_sum(tuple_0, tuple_0, tuple_0)


def test_case_1():
    list_0 = []
    var_0 = module_0.n_sum(list_0, list_0, list_0)


def test_case_2():
    float_0 = 2.0786236666045923
    list_0 = [float_0]
    var_0 = module_0.n_sum(float_0, list_0, float_0)


def test_case_3():
    float_0 = 2.0
    list_0 = [float_0, float_0]
    var_0 = module_0.n_sum(float_0, list_0, float_0)


def test_case_4():
    list_0 = []
    float_0 = 2.0
    var_0 = module_0.n_sum(float_0, list_0, float_0)


def test_case_5():
    float_0 = -0.3654442833581446
    list_0 = [float_0, float_0]
    var_0 = module_0.n_sum(float_0, list_0, float_0)


def test_case_6():
    float_0 = 2.0
    list_0 = [float_0, float_0, float_0, float_0]
    var_0 = module_0.n_sum(float_0, list_0, float_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    float_0 = 2.0
    list_0 = [float_0, float_0]
    float_1 = 1884.6802
    var_0 = module_0.n_sum(float_0, list_0, float_1)
    var_1 = module_0.n_sum(var_0, var_0, list_0)
    var_2 = module_1.object()
    int_0 = -1534
    module_0.n_sum(float_0, var_2, int_0, **var_2)


@pytest.mark.xfail(strict=True)
def test_case_8():
    float_0 = 2.0
    list_0 = [float_0, float_0]
    int_0 = 66
    list_1 = [int_0, float_0, float_0]
    var_0 = module_0.n_sum(int_0, list_1, float_0)
    float_1 = -2035.6018601992898
    module_0.n_sum(list_0, float_0, float_1)


def test_case_9():
    float_0 = 2.0
    list_0 = [float_0, float_0, float_0]
    float_1 = 4.0
    var_0 = module_0.n_sum(float_0, list_0, float_1)


@pytest.mark.xfail(strict=True)
def test_case_10():
    float_0 = 2.0
    list_0 = [float_0, float_0, float_0]
    float_1 = 4.0
    list_1 = [float_0, float_1, float_0, float_1]
    var_0 = module_0.n_sum(float_0, list_1, float_1)
    object_0 = module_1.object()
    module_0.n_sum(list_0, object_0, object_0)
