# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.backtrack.permute as module_0
import builtins as module_1


def test_case_0():
    str_0 = ""
    var_0 = module_0.permute(str_0)


def test_case_1():
    bytes_0 = b"?\xb1lV\x8c%"
    var_0 = module_0.permute(bytes_0)
    var_1 = module_0.permute_iter(bytes_0)


def test_case_2():
    bytes_0 = b"\x15\x7f\xb5\x11"
    var_0 = module_0.permute_recursive(bytes_0)


def test_case_3():
    set_0 = set()
    var_0 = module_0.permute_recursive(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    module_0.permute_recursive(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    module_0.permute_recursive(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = ""
    var_0 = module_0.permute_iter(str_0)
    var_1 = module_0.permute_iter(str_0)
    var_2 = module_0.permute_iter(var_1)
    module_1.object(*var_1)


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = ">7"
    var_0 = module_0.permute_iter(str_0)
    module_1.object(*var_0)
